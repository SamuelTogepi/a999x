#!/bin/bash

# Keep activation script and needed files after on-device activation has been restored for i.e. testing in OpenSSH.
debug=false

going_down() {
    # Recache for Setup.app
    uicache
    # Sync filesystem writes
    sync
    reboot
}

# Extract activation_records.
# schg flag is system immutable: requires superuser privileges to modify.

# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -d "/private/var/root/Library/Lockdown/activation_records" ]; then
     chflags -R noschg /private/var/root/Library/Lockdown/activation_records
fi
# Checked here by the OS from i.e. a previous update.
tar zxvf /activate/activation_records.tar.gz -C /private/var/root/Library/Lockdown
# Make immutable.
chflags -R schg /private/var/root/Library/Lockdown/activation_records    

# Stored here in a proper iOS 9 system. iOS 9.3 may not have the mad folder
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -d "/private/var/mobile/Library/mad/activation_records" ]; then
     chflags -R noschg /private/var/mobile/Library/mad/activation_records
fi
mkdir -p private/var/mobile/Library/mad
tar zxvf /activate/activation_records.tar.gz -C /private/var/mobile/Library/mad
# Make immutable.
chflags -R schg /private/var/mobile/Library/mad/activation_records

# Extract data_ark.plist.
# Checked here by the OS from i.e. a previous update.
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -f "/private/var/root/Library/Lockdown/data_ark.plist" ]; then
     chflags noschg /private/var/root/Library/Lockdown/data_ark.plist
fi
tar zxvf /activate/data_ark.plist.tar.gz -C /private/var/root/Library/Lockdown
# Make immutable.
chflags schg /private/var/root/Library/Lockdown/data_ark.plist

# Stored here in a proper iOS 9 system.
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -f "/private/var/mobile/Library/mad/data_ark.plist" ]; then
     chflags noschg /private/var/mobile/Library/mad/data_ark.plist
fi
tar zxvf /activate/data_ark.plist.tar.gz -C /private/var/mobile/Library/mad
# Make immutable
chflags schg /private/var/mobile/Library/mad/data_ark.plist

# Extract IC-Info.sisv.
mkdir -p /private/var/mobile/Library/FairPlay/iTunes_Control/iTunes
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -f "/private/var/mobile/Library/FairPlay/iTunes_Control/iTunes/IC-Info.sisv" ]; then
     chflags noschg /private/var/mobile/Library/FairPlay/iTunes_Control/iTunes/IC-Info.sisv
fi
tar zxvf /activate/IC-Info.sisv.tar.gz -C /private/var/mobile/Library/FairPlay/iTunes_Control/iTunes
# Make immutable.
chflags schg /private/var/mobile/Library/FairPlay/iTunes_Control/iTunes/IC-Info.sisv

# Extract com.apple.commcenter.device_specific_nobackup.plist.
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -f "/private/var/wireless/Library/Preferences/com.apple.commcenter.device_specific_nobackup.plist" ]; then
     chflags noschg /private/var/wireless/Library/Preferences/com.apple.commcenter.device_specific_nobackup.plist
fi
tar zxvf /activate/com.apple.commcenter.device_specific_nobackup.plist.tar.gz -C /private/var/wireless/Library/Preferences
# Make immutable.
chflags schg /private/var/wireless/Library/Preferences/com.apple.commcenter.device_specific_nobackup.plist

# Extract com.apple.factorydata.
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -d "/System/Library/Caches/com.apple.factorydata" ]; then
     chflags -R noschg /System/Library/Caches/com.apple.factorydata
fi
tar zxvf /activate/com.apple.factorydata.tar.gz -C /System/Library/Caches
# Make immutable.
chflags -R schg /System/Library/Caches/com.apple.factorydata

# Needed for iOS 9.3-9.3.3 to activate. THANKYOU JOHN: https://x.com/John011235/status/1756498551385755682
# Remove Immutable flags if this has already been ran once by the launch daemon and now we are debuging.
if [ -f "/var/mobile/Library/Caches/com.apple.MobileGestalt.plist" ]; then
     chflags noschg /var/mobile/Library/Caches/com.apple.MobileGestalt.plist
fi
plutil -key CacheExtra -key a6vjPkzcRjrsXmniFsm0dg -true /var/mobile/Library/Caches/com.apple.MobileGestalt.plist 
# Make immutable.
chflags schg /var/mobile/Library/Caches/com.apple.MobileGestalt.plist

# If previously ran because debug=true Setup.app has already been moved back.
if [ -d "/Applications/Setup.bak" ]; then
    mv /Applications/Setup.bak /Applications/Setup.app
fi

# Reboot to apply activation and delete us.
# Keep files for test run once we have OpenSSH if debug=true.

# This is being executed by the launch daemon.
if [ $debug = false ]; then
    rm /usr/bin/plutil
    rm /usr/bin/chflags
    rm /usr/bin/activate
    # This is rm -f because the launch daemon could have been deleted if debug=true and then debug=false.
    rm -f /Library/LaunchDaemons/com.alex.activate.plist
    rm -r /activate
    going_down
# First run of debug=true. Just delete the launch daemon and allow for testing of script later via OpenSSH on device.
elif [ $debug = true ] && [ -f "/Library/LaunchDaemons/com.alex.activate.plist" ]; then
    rm /Library/LaunchDaemons/com.alex.activate.plist
    going_down
else
# Running from OpenSSH or terminal
    uicache
    sync
fi
